name: autofix-pr

on:
  workflow_dispatch:
    inputs:
      force_pr:
        description: "변경이 없어도 테스트용 PR 강제 생성"
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: "autofix"
  cancel-in-progress: true

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: main          # 기본 브랜치가 다르면 수정
          fetch-depth: 0

      - name: Configure Git (safe)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # ✅ 어떤 패키지 매니저든 안전하게, 실패해도 진행
      - name: Install deps (if needed, never fail)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm install --frozen-lockfile || pnpm install || true
          elif [ -f yarn.lock ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install || true
          elif [ -f package.json ]; then
            npm ci || npm i || true
          else
            echo "No package manager files; skip install"
          fi

      # ✅ 포맷/린트는 에러여도 계속 진행
      - name: Auto-fix (JS) — safe mode
        shell: bash
        run: |
          npx --yes prettier . --write || true
          npx --yes eslint . --ext .js,.jsx,.ts,.tsx --fix || true

      - name: Detect changes
        id: detect
        shell: bash
        run: |
          set +e
          git add -A
          if git diff --staged --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Has changes"
          fi
          exit 0

      # ✅ 원하는 경우 변경이 없어도 아주 작은 변경을 만들어 PR 강제 생성
      - name: Force tiny change (when requested)
        if: steps.detect.outputs.changed != 'true' && inputs.force_pr == 'true'
        run: |
          echo "autofix keepalive $(date +%s)" >> .autofix_keepalive
          git add -A

      - name: Create Pull Request (single rolling PR)
        if: steps.detect.outputs.changed == 'true' || inputs.force_pr == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: bot/autofix            # 항상 이 브랜치 → PR 1개만 유지
          commit-message: "chore(autofix): apply automatic code fixes"
          title: "chore(autofix): automatic code fixes"
          body: "자동 포맷/린트 수정 PR입니다."
          delete-branch: true

      - name: Nothing to commit
        if: steps.detect.outputs.changed != 'true' && inputs.force_pr != 'true'
        run: echo "No changes to commit."
