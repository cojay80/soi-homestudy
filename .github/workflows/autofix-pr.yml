name: autofix-pr

on:
  workflow_dispatch: {}  # 수동 실행만

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: "autofix"
  cancel-in-progress: true

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.AUTOFIX_PAT }}   # PAT 사용(권한 이슈 원천 차단)

      - name: Configure Git (safe)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 의존성 설치 (실패해도 계속)
      - name: Install deps (never fail)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then corepack enable && pnpm i || true
          elif [ -f yarn.lock ]; then corepack enable && yarn i || true
          elif [ -f package-lock.json ]; then npm ci || npm i || true
          elif [ -f package.json ]; then npm i || true
          else echo "No package.json"; fi

      # 자동 포맷/린트 (실패해도 계속)
      - name: Auto-fix (Prettier/ESLint — safe)
        shell: bash
        run: |
          npx --yes prettier . --write || true
          npx --yes eslint . --ext .js,.jsx,.ts,.tsx --fix || true

      # 변경 있을 때만 PR 생성
      - name: Detect changes (never fail)
        id: detect
        shell: bash
        run: |
          set +e
          git add -A
          if git diff --staged --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Has changes"
          fi
          exit 0

      # 디버그(충돌/원격 상태 확인용)
      - name: Debug git state
        run: |
          git rev-parse --abbrev-ref HEAD
          git status --porcelain || true
          git ls-remote --heads origin bot/autofix || true

      - name: Create Pull Request (single rolling PR)
        if: steps.detect.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.AUTOFIX_PAT }}     # PR 생성도 PAT로
          base: main
          branch: bot/autofix                   # 기본 롤링 브랜치
          branch-suffix: timestamp              # ✅ 1회 우회용(성공 확인 후 제거하세요)
          commit-message: "chore(autofix): apply automatic code fixes"
          title: "chore(autofix): automatic code fixes"
          body: "자동 포맷/린트 수정 PR입니다."
          delete-branch: true
          signoff: true                         # DCO 등 사인오프 요구 충족

      - name: Nothing to commit
        if: steps.detect.outputs.changed != 'true'
        run: echo "No changes to commit."
